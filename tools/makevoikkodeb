#!/bin/bash
#
# Skripti Debian-pakettien tekemiseen Voikon komponenteista
#
# Tehnyt: Teemu Likonen <tlikonen@iki.fi>
#
# Tämä skripti on yleistä omaisuutta (public domain).

component="$1"
commit="$2"

check_git() {
	if ! which git &>/dev/null; then
		echo "VIRHE: Ei löydy git-ohjelmaa."
		exit 1
	fi

	export GIT_DIR="$VOIKKO_GIT_DIR"

	if ! git rev-parse --git-dir &>/dev/null; then
		printf '%s\n' "" \
			"VIRHE: Voikon Git-repositorya ei löydy." \
			"Aseta ympäristömuuttuja VOIKKO_GIT_DIR oikein," \
			"esimerkiksi:" "" \
			"    export VOIKKO_GIT_DIR=$HOME/voikko/.git" ""
		exit 1
	fi
}

check_package() {
	local package not_installed
	local i=0
	for package in "$@"; do
		if ! dpkg --list "$package" 2>/dev/null | grep -q ^ii; then
			not_installed[i++]=$package
		fi
	done
	if [ "$not_installed" ]; then
		echo "VIRHE: Seuraavat paketit täytyy asentaa:"
		printf '  %s\n' "${not_installed[@]}"
		exit 1
	fi
}

get_git() {
	local git_dir="$1"
	local dest_dir="$2"
	local git_ref="$3"
	local tree
	tree=$(git rev-parse --verify --symbolic "$git_ref:$git_dir") || exit 1
	echo "Copying $tree -> $dest_dir"
	git archive --format=tar --prefix="$dest_dir/" "$tree" | \
		tar --extract || exit 1
}

update_changelog() {
	local component="$1"
	local debian_dir="$2"
	local git_ref="$3"
	local tag_prefix="$4"
	local tag_prefix_re
	local git_commit_id git_commit_date
	local git_commit_id_source git_commit_id_debian
	local git_commit_date_source git_commit_date_debian
	local source_package version changelog_new
	git_commit_id_source=$(git rev-list -1 "$git_ref" -- "$component")
	git_commit_id_debian=$(git rev-list -1 "$git_ref" -- "$debian_dir")
	git_commit_date=$(git log -1 --pretty=format:%ai "$git_ref")
	git_commit_date_source=$(git log -1 --pretty=format:%ai \
		"$git_ref" -- "$component")
	git_commit_date_debian=$(git log -1 --pretty=format:%ai \
		"$git_ref" -- "$debian_dir")
	source_package=$(dpkg-parsechangelog | awk '/^Source:/ {print $2}')

	if [ "$tag_prefix" ]; then
		tag_prefix_re=$(printf "%s\n" "$tag_prefix" | \
			sed -e 's,[][\^$./*],\\&,g')
		version=$(git describe --tags --long --match \
			"${tag_prefix}*" "$git_ref" | \
			sed -e "s/$tag_prefix_re//;s/-/+git/;s/-g/./") \
			|| exit 1
	else
		version=0.0+git$(date --utc --date="$git_commit_date" \
			+%Y%m%dT%H%M%SZ)
	fi

	changelog_new=$(mktemp) || exit 1
	printf "%s (%s-1) unstable; urgency=low\n\n" \
		"$source_package" "$version" > "$changelog_new"
	printf "  * A development snapshot. Last changes:\n\n" >> \
		"$changelog_new"
	printf "    Source tree:\n" >> "$changelog_new"
	printf "      Commit: %s\n" "$git_commit_id_source" >> "$changelog_new"
	printf "      Date:   %s\n" "$git_commit_date_source" >> \
		"$changelog_new"
	printf "    Debian data:\n" >> "$changelog_new"
	printf "      Commit: %s\n" "$git_commit_id_debian" >> "$changelog_new"
	printf "      Date:   %s\n\n" "$git_commit_date_debian" >> \
		"$changelog_new"
	printf " -- %s <%s>  %s\n\n" \
		"${DEBFULLNAME:-Nobody}" "${DEBEMAIL:-nobody@invalid}" \
		"$(date -R)" >> "$changelog_new"
	cat debian/changelog >> "$changelog_new"
	mv -- "$changelog_new" debian/changelog
}

build_deb() {
	dpkg-checkbuilddeps || exit 1
	fakeroot debian/rules clean || exit 1
	fakeroot debian/rules binary || exit 1
}

libvoikko() {
	local component=libvoikko
	local debian_dir=debian/libvoikko+debian
	local commit="$1"
	local git_ref="${commit:-HEAD}"
	check_package libtool automake
	get_git "$component" "$component" "$git_ref"
	get_git "$debian_dir" "$component/debian" "$git_ref"
	cd "$component" || exit 1
	sh autogen.sh || exit 1
	update_changelog "$component" "$debian_dir" "$git_ref" "libvoikko-"
	build_deb
	echo
	dpkg-parsechangelog
}

mozvoikko() {
	local component=mozvoikko
	local debian_dir=debian/mozvoikko+debian
	local commit="$1"
	local git_ref="${commit:-HEAD}"
	get_git "$component" "$component" "$git_ref"
	get_git "$debian_dir" "$component/debian" "$git_ref"
	cd "$component" || exit 1
	update_changelog "$component" "$debian_dir" "$git_ref" "mozvoikko-"
	build_deb
	echo
	dpkg-parsechangelog
}

suomimalaga() {
	local component=suomimalaga
	local debian_dir=debian/suomi-malaga+debian
	local commit="$1"
	local git_ref="${commit:-HEAD}"
	check_package libtool automake
	get_git "$component" "$component" "$git_ref"
	get_git "$debian_dir" "$component/debian" "$git_ref"
	cd "$component" || exit 1
	update_changelog "$component" "$debian_dir" "$git_ref" "suomi-malaga-"
	build_deb
	echo
	dpkg-parsechangelog
}

tmispell() {
	local component=tmispell
	local debian_dir=debian/tmispell-voikko+debian
	local commit="$1"
	local git_ref="${commit:-HEAD}"
	check_package libtool automake
	get_git "$component" "$component" "$git_ref"
	get_git "$debian_dir" "$component/debian" "$git_ref"
	cd "$component" || exit 1
	sh autogen.sh || exit 1
	update_changelog "$component" "$debian_dir" "$git_ref" \
		"tmispell-voikko-"
	build_deb
	echo
	dpkg-parsechangelog
}

ooovoikko() {
	local component=ooovoikko
	local debian_dir=debian/openoffice.org-voikko+debian
	local commit="$1"
	local git_ref="${commit:-HEAD}"
	check_package libtool automake
	get_git "$component" "$component" "$git_ref"
	get_git "$debian_dir" "$component/debian" "$git_ref"
	cd "$component" || exit 1
	update_changelog "$component" "$debian_dir" "$git_ref" \
		"openoffice.org-voikko-"
	build_deb
	echo
	dpkg-parsechangelog
}

print_usage() {
	local name=$(basename -- "$0")
	cat <<EOF
$name - Luo Voikon komponenteista Debian-paketin

Kuvaus: Tämä työkalu kopioi lähdekoodin Voikon Git-repositorysta,
kääntää sen ja paketoi Debian-paketiksi. Kääntämishakemisto sekä valmis
Debian-paketti luodaan nykyisen hakemiston alle.

Käyttö: $name <komponentti> [versio]

  <komponentti> = suomimalaga | libvoikko | ooovoikko | tmispell | mozvoikko

  Vapaaehtoinen parametri [versio] voi olla mikä tahansa Gitin ymmärtämä
  viittaus versioon. Oletuksena se on HEAD eli nykyisen haaran viimeisin
  commit.

Esimerkkejä:

  Rakenna suomi-malaga (voikko-fi) nykyisestä HEAD-versiosta:
  $ $name suomimalaga

  Rakenna suomi-malaga (voikko-fi) annetusta tagista (tai haarasta):
  $ $name suomimalaga suomi-malaga-1.1

  Rakenna tmispell-voikko versiosta 5414badf:
  $ $name tmispell 5414badf

  Rakenna libvoikko versiosta master~3:
  $ $name libvoikko master~3

  Rakenna openoffice.org-voikko master-haarasta tiettynä ajankohtana:
  $ $name ooovoikko master@{2.days.ago}

EOF
}

case "$component" in
libvoikko|ooovoikko|tmispell|suomimalaga|mozvoikko)
	check_git
	check_package build-essential fakeroot
	"$component" "$commit"
	;;
*)
	print_usage
	exit 2
	;;
esac
