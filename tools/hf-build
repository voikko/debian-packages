#!/bin/bash
# Kääntää uuden upstream-, downstream- tai arkkitehtuuriversion ja vaihtaa
# .changes-tiedostoon uuden distron. Tämä skripti täytyy ajaa
# lähdekoodihakemistossa.

default_action=deb
default_key=e1ff97a0
default_distribution=dapper

script_name=$(basename $0)
tmp_changes="../tmp-changes" # Älä laita tätä .changes-päätteiseksi.

action=${1:-$default_action}
distribution=${2:-$default_distribution}
key=${3:-$default_key}


# Kirjoitetaan uusi .changes-tiedosto entisen päälle.
function new_binary_changes() {
	[ -e $tmp_changes ] && mv -f $tmp_changes $(find .. -maxdepth 1 -name '*.changes' | grep -v '_source\.changes$' | sort | tail -n1)
}

function new_source_changes() {
	[ -e $tmp_changes ] && mv -f $tmp_changes $(find .. -maxdepth 1 -name '*_source.changes' | sort | tail -n1)
}

# .orig.tar.gz, .diff.gz, .deb
function up() {
	dpkg-buildpackage -sa -rfakeroot -k$key -uc && \
	  (dpkg-genchanges -sa -DDistribution=$distribution ; echo) | gpg --clearsign --default-key=$key | tee $tmp_changes && \
	  new_binary_changes
}

# .diff.gz, .deb
function down() {
	dpkg-buildpackage -sd -rfakeroot -k$key -uc && \
	  (dpkg-genchanges -sd -DDistribution=$distribution ; echo) | gpg --clearsign --default-key=$key | tee $tmp_changes && \
	  new_binary_changes
}

# .deb
function deb() {
	dpkg-buildpackage -sd -b -rfakeroot -k$key -uc && \
	  (dpkg-genchanges -sd -b -DDistribution=$distribution ; echo) | gpg --clearsign --default-key=$key | tee $tmp_changes && \
	  new_binary_changes
}

# Vain sorsat: .orig.tar.gz, diff.gz
function upsrc() {
	dpkg-buildpackage -sa -S -rfakeroot -k$key -uc && \
	  (dpkg-genchanges -sa -S -DDistribution=$distribution ; echo) | gpg --clearsign --default-key=$key | tee $tmp_changes && \
	  new_source_changes
}

# Vain sorsat: diff.gz
function downsrc() {
	dpkg-buildpackage -sd -S -rfakeroot -k$key -uc && \
	  (dpkg-genchanges -sd -S -DDistribution=$distribution ; echo) | gpg --clearsign --default-key=$key | tee $tmp_changes && \
	  new_source_changes
}

# Siivotaan käännöshakemisto
function clean() {
	fakeroot debian/rules clean
}

case "$action" in
	up|down|deb|upsrc|downsrc|clean) $action ;;
	*)
		echo "Usage: $script_name [up|down|deb|upsrc|downsrc|clean] [distribution] [gpg key]"
		exit 1
	;;
esac
