#!/bin/bash
#
# 	preinst - Configuration script for openoffice.org-voikko
#
# 	by Teemu Likonen <tlikonen@iki.fi>
#
# This script checks if there are any OpenOffice.org processes running. If so
# we must stop the installation and ask user to close the OpenOffice.org.


# Names used in messages
NAME_STRONG=Oo2-voikko
NAME_WEAK=Oo2-voiko
OPENOFFICEORG=OpenOffice.org


# Here we define a function that will display messages to user.

case "$(locale | grep ^LC_MESSAGES=)" in
	*fi_FI*) MSG_LANG=finnish ;;
	*) MSG_LANG="" ;;
esac

ICONV=""
which iconv &>/dev/null && ICONV="| iconv --from-code=UTF-8 --to-code=//TRANSLIT"

function msg() {
	case "$1" in
		upgrade_abort)
			case "$MSG_LANG" in
				finnish) echo VIRHE: preinst $2 $3
				;;
				*) echo ERROR: preinst $2 $3
				;;
			esac
		;;
		ooo_is_running)
			case "$MSG_LANG" in
				finnish) eval cat <<EOF $ICONV
----------------------------------------------------------------------
Näyttää siltä, että ${OPENOFFICEORG} on parasta aikaa käynnissä.
Jos ${NAME_WEAK}n asentaa tai poistaa ${OPENOFFICEORG}in ollessa käynnissä,
saattaa ${OPENOFFICEORG}in asennus rikkoutua. Mahdollisten ongelmien
välttämiseksi sulje ensin ${OPENOFFICEORG} ja yritä sitten uudestaan.
----------------------------------------------------------------------
EOF
				;;
				*) eval cat <<EOF $ICONV
----------------------------------------------------------------
It seems that there are ${OPENOFFICEORG} processes running.
To prevent possible breakage of your ${OPENOFFICEORG} installation
please close all running ${OPENOFFICEORG} instances first.
----------------------------------------------------------------
EOF
				;;
			esac
		;;
	esac
}


### Copy these lines to form new message definitions #############
#		message)
#			case "$MSG_LANG" in
#				finnish) eval cat <<EOF $ICONV
#EOF
#				;;
#				*) eval cat <<EOF $ICONV
#EOF
#				;;
#			esac
#		;;
##################################################################



if [ $1 = abort-upgrade ]
then
	msg upgrade_abort $1 $2
	exit 0
fi

if pidof soffice.bin &>/dev/null
then
	msg ooo_is_running
	exit 1
fi

exit 0
