#!/bin/bash
#
# 	prerm - Configuration script for openoffice.org-voikko
#
#	by Teemu Likonen <tlikonen@iki.fi>
#
# This script removes language component(s) from OpenOffice.org's package
# manager.


# Names used in messages
NAME_STRONG=Voikko
NAME_WEAK=Voiko
OPENOFFICEORG=OpenOffice.org

# This package's name in Debian package manager. This is also the name of the
# directory the language component is in.
PACKAGE_NAME=openoffice.org-voikko

# The name of the language component
COMPONENT_BASENAME=voikko
COMPONENT_FULLPATH=/usr/lib/$PACKAGE_NAME/${COMPONENT_BASENAME}*.oxt

# 'unopkg' registers and removes the language component to/from the
# OpenOffice.org. This is the full path name to it.
UNOPKG=/usr/lib/openoffice/program/unopkg


# Here we define a function that will display messages to user.

case "$(locale | grep ^LC_MESSAGES=)" in
	*fi_*) MSG_LANG=finnish ;;
	*) MSG_LANG="" ;;
esac

ICONV=""
which iconv &>/dev/null && ICONV="| iconv --from-code=UTF-8 --to-code=//TRANSLIT"

function msg() {
	case "$1" in
		upgrade_failed)
			case "$MSG_LANG" in
				finnish) echo VIRHE: prerm $2 $3
				;;
				*) echo ERROR: prerm $2 $3
				;;
			esac
		;;
		ooo_is_running)
			case "$MSG_LANG" in
				finnish) eval cat <<EOF $ICONV
------------------------------------------------------------------------------
VAROITUS: Näyttää siltä, että ${OPENOFFICEORG} on jollakin käyttäjällä
käynnissä. Kun ${NAME_WEAK}n poistaa ${OPENOFFICEORG}in ollessa käynnissä,
saattaa käyttäjän ${OPENOFFICEORG}issa esiintyä toimintahäiriöitä.
------------------------------------------------------------------------------
EOF
				;;
				*) eval cat <<EOF $ICONV
------------------------------------------------------------------------------
WARNING: It seems that there are ${OPENOFFICEORG} processes running. If
${NAME_STRONG} is removed while ${OPENOFFICEORG} is running, it is possible
that user’s ${OPENOFFICEORG} process don’t function properly.
------------------------------------------------------------------------------
EOF
				;;
			esac
		;;
		component_remove)
			case "$MSG_LANG" in
				finnish) eval cat <<EOF $ICONV
${NAME_STRONG} poistettu ${OPENOFFICEORG}ista.
EOF
				;;
				*) eval cat <<EOF $ICONV
${NAME_STRONG} removed from ${OPENOFFICEORG}.
EOF
				;;
			esac
		;;
		component_remove_failed)
			case "$MSG_LANG" in
				finnish) eval cat <<EOF $ICONV
VIRHE: ${NAME_WEAK}n poistaminen ${OPENOFFICEORG}ista epäonnistui.
EOF
				;;
				*) eval cat <<EOF $ICONV
ERROR: Failed to remove ${NAME_STRONG} from ${OPENOFFICEORG}.
EOF
				;;
			esac
		;;
		component_list_failed)
			case "$MSG_LANG" in
				finnish) eval cat <<EOF $ICONV
VIRHE: Mahdollisten aikaisemmin asennettujen ${OPENOFFICEORG}in
kielikomponenttien tarkistaminen epäonnistui.
EOF
				;;
				*) eval cat <<EOF $ICONV
ERROR: Failed to check previously installed ${OPENOFFICEORG} language
components.
EOF
				;;
			esac
		;;
	esac
}


### Copy these lines to form new message definitions #############
#		message)
#			case "$MSG_LANG" in
#				finnish) eval cat <<EOF $ICONV
#EOF
#				;;
#				*) eval cat <<EOF $ICONV
#EOF
#				;;
#			esac
#		;;
##################################################################



# If during the upgrade process the old prerm failed, dpkg will run this new
# package's prerm. No doubt this will fail too so we want to stop and leave the
# old package untouched.
if [ $1 = failed-upgrade ]
then
	msg upgrade_failed $1 $2
	exit 1
fi

# We check if OpenOffice.org is running and give a warning if it is.
[ $1 = remove ] && pidof soffice.bin &>/dev/null && msg ooo_is_running


# Registering program 'unopkg' writes things to $HOME/.openoffice* directory
# (even with the '--shared' option). We must set $HOME to some temporary
# directory so that these (root owned) files don't get written to the regular
# user's HOME in case he/she runs this with sudo.
TMP_HOME="$(mktemp -t -d $PACKAGE_NAME.XXXXXX)" || exit 1
export HOME="$TMP_HOME"


# We remove possible previously installed language component from the system.

if $UNOPKG list --shared &>/dev/null
then
	COMPONENT_LIST=$($UNOPKG list --shared 2>/dev/null | sed -ne "s/^Name: \\(${COMPONENT_BASENAME}.*\\)/\\1/p")
	for COMPONENT in $COMPONENT_LIST
	do
		if $UNOPKG remove --shared $COMPONENT &>/dev/null
		then msg component_remove
		else msg component_remove_failed
		fi
	done
else msg component_list_failed
fi

# Delete the temporary HOME directory
rm -fr "$TMP_HOME"

#DEBHELPER#

exit 0
